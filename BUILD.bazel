# Add rules here to build your software

"Each of these extract output binaries into bazel rules"
load("@npm//@babel/cli:index.bzl", "babel")
load("@npm//mocha:index.bzl", "mocha_test")
load("@npm//http-server:index.bzl", "http_server")

"build all source files as ESM and push to compile output directory"
babel(
    name = "compile",
    data = glob(["src/*.js"]) + [
        "src/es5.babelrc",
        "@npm//@babel/preset-env",
    ],
    output_dir = True,
    args = glob(["src/*.js"]) +[
        "--config-file",
        "./$(execpath src/es5.babelrc)",
        "--out-dir",
        "$(@D)"
    ],
)

babel(
    name = "compile_test",
    data = glob(["src/*.js"]) + [
        "src/es5_test.babelrc",
        "@npm//@babel/preset-env",
    ],
    output_dir = True,
    args = glob(["src/*.js"]) +[
        "--config-file",
        "./$(execpath src/es5_test.babelrc)",
        "--out-dir",
        "$(@D)"
    ],
)

"Run development server against babel output" 
http_server(
    name = "server",
    data = [
        "index.html",
        ":compile"
    ],
    args = ["."],
)

mocha_test(
    name = "unit_tests",
    args = ["test/*.spec.js"],
    data = glob(["test/*.spec.js"]) + [
        "@npm//domino",
        ":compile_test",
    ],
)